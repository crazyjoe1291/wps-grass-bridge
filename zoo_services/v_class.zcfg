[v_class]
Title = Classifies attribute data, e.g. for thematic mapping
Abstract = http://grass.osgeo.org/grass70/manuals/html70_user/v.class.html
processVersion = 2
storeSupported = true 
statusSupported = true
serviceProvider = v_class
serviceType = Python
<DataInputs>
  [map]
  Title = Data source for direct OGR access
  Abstract =
  minOccurs = 1
  maxOccurs = 1
  <ComplexData>
    <Default>
      mimeType = text/xml
      encoding = UTF-8
      schema = http://schemas.opengis.net/gml/3.1.1/base/gml.xsd
    </Default>
    <Supported>
      mimeType = text/xml
      encoding = UTF-8
      schema = http://schemas.opengis.net/gml/3.1.1/base/gml.xsd
    </Supported>
    <Supported>
      mimeType = application/xml
      encoding = UTF-8
      schema = http://schemas.opengis.net/gml/3.1.1/base/gml.xsd
    </Supported>
    <Supported>
      mimeType = text/xml
      encoding = UTF-8
      schema = http://schemas.opengis.net/gml/2.1.2/feature.xsd
    </Supported>
    <Supported>
      mimeType = application/xml
      encoding = UTF-8
      schema = http://schemas.opengis.net/gml/2.1.2/feature.xsd
    </Supported>
    <Supported>
      mimeType = text/xml
      encoding = UTF-8
      schema = http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd
    </Supported>
    <Supported>
      mimeType = application/dgn
    </Supported>
    <Supported>
      mimeType = application/shp
    </Supported>
    <Supported>
      mimeType = application/x-zipped-shp
    </Supported>
  </ComplexData>
  [layer]
  Title = A single vector map can be connected to multiple database tables. This number determines which table to use. Layer name for direct OGR access.
  Abstract =
  minOccurs = 1
  maxOccurs = 1
  <LiteralData>
    DataType   = string
    <Default>
      value = 1
    </Default>
  </LiteralData>
  [column]
  Title = Column name or expression
  Abstract =
  minOccurs = 1
  maxOccurs = 1
  <LiteralData>
    DataType   = string
    <Default>
    </Default>
  </LiteralData>
  [where]
  Title = Example: income  1000 and inhab :: 10000
  Abstract =
  minOccurs = 0
  maxOccurs = 1
  <LiteralData>
    DataType   = string
    <Default>
    </Default>
  </LiteralData>
  [algorithm]
  Title = Algorithm to use for classification
  Abstract =
  minOccurs = 1
  maxOccurs = 1
  <LiteralData>
    DataType   = string
    <Default>
    </Default>
  </LiteralData>
  [nbclasses]
  Title = Number of classes to define
  Abstract =
  minOccurs = 1
  maxOccurs = 1
  <LiteralData>
    DataType   = integer
    <Default>
    </Default>
  </LiteralData>
  [-g]
  Title = Print only class breaks without min and max
  Abstract =
  minOccurs = 0
  maxOccurs = 1
  <LiteralData>
    DataType   = boolean
    <Default>
      value = false
    </Default>
  </LiteralData>
</DataInputs>
<DataOutputs>
  [stdout]
  Title = Module output on stdout
  Abstract = The output of the module written to stdout
  <ComplexData>
    <Default>
      mimeType = text/plain
    </Default>
    <Supported>
      mimeType = text/plain
    </Supported>
  </ComplexData>
</DataOutputs>
